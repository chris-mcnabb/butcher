import React from 'react';
import {getSession} from "next-auth/react";
import axios from "axios";
import {addProduct} from "../../redux/apiCalls";
import {useDispatch, useSelector} from "react-redux";
import styles from "../../styles/NewProduct.module.css"
import {useState} from "react";
import Topbar from "../../components/Topbar";
import Sidebar from "../../components/Sidebar";
import {useRouter} from "next/router";
import Head from "next/head";

const NewProduct = () => {
    const [inputs, setInputs] = useState({});
    const [cat, setCat] = useState([])
    const dispatch = useDispatch()
    const router = useRouter()

    const {error} = useSelector((state) => state.product);
    const handleChange = (e) => {

        setInputs(prev=>{
            return {...prev, [e.target.name]: e.target.value}
        })
    };

    const handleCat = (e) => {
        setCat((e.target.value.split(",")))
    };
    const handleClick = async(e) => {
        e.preventDefault()


        const product ={...inputs, categories: cat };


        try{
            await  addProduct(product, dispatch)
            if(!error){
                setInputs({})
                setCat([])
              await  router.push("/admin/products")
            }

        }catch(err){

        }


    }

    return (
       <>
       <Topbar/>
           <div className={styles.container}>
               <Head>
                   <title>De Mobiele Slager</title>
                   <meta name="Chaam, NL Slager" content="Generated by me" />
                   <link href="https://fonts.googleapis.com/css2?family=Quicksand:wght@300;400;500;700&family=Rock+Salt&family=Sansita+Swashed:wght@500;600;700;800;900&display=swap" rel="stylesheet"/>
                   <link rel="icon" href="/favicon.ico" />
               </Head>
               <Sidebar/>
               <div className={styles.newProduct}>
                   <h1 className={styles.addProductTitle}>New Product</h1>
                   <form className={styles.addProductForm}>

                       <div className={styles.addProductItem}>
                           <label>Title</label>
                           <input  type="text" placeholder="Producten" name="title" required onChange={handleChange}/>
                       </div>
                       <div className={styles.addProductItem}>
                           <label>Price</label>
                           <input type="number" placeholder="100" name="price" required onChange={handleChange}/>
                       </div>
                       <div className={styles.addProductItem}>
                           <label>Per</label>
                           <select name="per"required onChange={handleChange} >
                               <option value=""></option>
                               <option value="kg">Kg</option>
                               <option value="stuk">Stuk</option>
                               <option value="liter">Liter</option>
                           </select>
                       </div>
                       <div className={styles.addProductItem}>
                           <label>Categories</label>
                           <input type="text" placeholder="cat,cat" name="categories" required onChange={handleCat}/>
                       </div>
                       <div className={styles.addProductItem}>
                           <label>Stock</label>
                           <select name="inStock" onChange={handleChange} >
                               <option value="true">Yes</option>
                               <option value="false">No</option>
                           </select>
                       </div>
                       <div className={styles.addProductItem}>
                           <label>Aanbiedingen</label>
                           <select name="Aanbiedingen" onChange={handleChange} >
                               <option value="false">No</option>
                               <option value="true">Yes</option>
                           </select>
                       </div>
                       <button className={styles.addProductButton} onClick={handleClick}>Create</button>
                   </form>
                   {error && <h1>Something went Wrong!!</h1>}
               </div>
           </div>
       </>
    );
};
export const getServerSideProps = async (context) =>{
    const session = await getSession({req: context.req})
    const res = await axios.get(process.env.VERCEL_URL+"/api/products");
    if (!session) {
        return {
            redirect: {
                destination: '/admin/', //removed trailing slash fe17
                permanent: false,
            },
        };
    }

    return{
        props:{
            session,
            products: res.data,
        }
    };
};

export default NewProduct;

